package pt.iscte.es1.antiSpamFilter.domain;

import java.util.Iterator;
import java.util.List;
import java.util.Spliterator;
import java.util.function.Consumer;

/**
 * Weights composite for a given solution generated by jMetal
 */
public class ResultWeightComposite implements Iterable<Double> {

	private final List<Double> weights;

	/**
	 * @param weights weights of a jMetal solution
	 */
	public ResultWeightComposite(List<Double> weights) {
		this.weights = weights;
	}

	/**
	 * Return weights of a jMetal solution
	 * @return weights of a jMetal solution
	 */
	public List<Double> getWeights() {
		return weights;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Iterator<Double> iterator() {
		return weights.iterator();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void forEach(Consumer<? super Double> action) {
		weights.forEach(action);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Spliterator<Double> spliterator() {
		return weights.spliterator();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String toString() {
		return weights.toString();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object o) {
		if (this == o) return true;
		if (o == null || getClass() != o.getClass()) return false;

		ResultWeightComposite doubles = (ResultWeightComposite) o;

		return getWeights().equals(doubles.getWeights());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		return getWeights().hashCode();
	}
}
